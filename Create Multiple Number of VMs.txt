Providers
-------------
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "3.77.0"
    }
  }
}

provider "azurerm" {
  
subscription_id = "8c715608-1162-4bee-b823-df584118ae30"
client_id = "af622ade-70f7-4e6d-8ad3-63e3819d05f2"
client_secret = "Gm-8Q~nXE8QQccxzS4N.yv_yeifjjCsuZtn1RbfI"
tenant_id = "e7b178ca-5a96-4bc3-8b1c-0f71ee1ab09e"
features {}
}



Variables
-------------

variable "number_of_subnets" {

    type = number
    description = "Number of subnets"
    

    validation {
      condition = var.number_of_subnets < 10
      error_message = "The number of subnets should be less tham 10"
    }
  
}

variable "number_of_VM" {

    type = number
    description = "How Many VMs to be provisioned"
    
    validation {
      condition = var.number_of_VM < 10
      error_message = "The number of VMs should be less than 10"
    }
  
}

locals
--------------

locals {
  resource_group_name = "App-Resource"
  location = "North Europe"
  virtual_network = {
    name = "ADVNET01"
    ad_space= "10.0.0.0/16"
}

  Az_tags = {
    Environment = "Production"
    Application-Name = "Netflix-India"
    Application-ID = "211109098"
    Business-Service = "Media"

  }
  
}

Networking
---------------

resource "azurerm_resource_group" "AzResourceGr1" {
  name = local.resource_group_name
  location = local.location

}

resource "azurerm_virtual_network" "azvnet1" {
  name                = local.virtual_network.name
  location            = azurerm_resource_group.AzResourceGr1.location
  resource_group_name = azurerm_resource_group.AzResourceGr1.name
  address_space       = [local.virtual_network.ad_space]

  tags = local.Az_tags

  depends_on = [ 
    azurerm_resource_group.AzResourceGr1 ]

}

resource "azurerm_subnet" "az_subnet" {

count = var.number_of_subnets
  name                 = "Subnet-0${count.index}"
  resource_group_name  = local.resource_group_name
  virtual_network_name = local.virtual_network.name
  address_prefixes     = ["10.0.${count.index}.0/24"]
  
  depends_on = [ azurerm_virtual_network.azvnet1 ]
}



resource "azurerm_network_security_group" "az_nsg" {
  name                = "NSG01"
  location            = local.location
  resource_group_name = local.resource_group_name

  security_rule {
    name                       = "RDP_NSG"
    priority                   = 200
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "3389"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  tags = local.Az_tags

  depends_on = [ azurerm_resource_group.AzResourceGr1 ]
  }

  resource "azurerm_subnet_network_security_group_association" "az_nsg_association" {
    count = var.number_of_subnets
  subnet_id                 = azurerm_subnet.az_subnet[count.index].id
  network_security_group_id = azurerm_network_security_group.az_nsg.id

  depends_on = [azurerm_virtual_network.azvnet1,azurerm_network_security_group.az_nsg]
}


Virtual Machines
--------------------
resource "azurerm_network_interface" "az_interface" {
count = var.number_of_VM
  name                = "azvm-nic-0${count.index}"
  location            = local.location
  resource_group_name = local.resource_group_name

  ip_configuration {
    name                          = "ipconfig1"
    subnet_id                     = azurerm_subnet.az_subnet[count.index].id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.az_pub_ip[count.index].id
  }

  depends_on = [ azurerm_subnet.az_subnet, azurerm_public_ip.az_pub_ip ]
}

resource "azurerm_public_ip" "az_pub_ip"{

  count = var.number_of_VM
  name                = "Az_PublicIP_0${count.index}"
  resource_group_name = local.resource_group_name
  location            = local.location
  allocation_method   = "Static"

  tags = local.Az_tags

  depends_on = [ azurerm_resource_group.AzResourceGr1 ]
}

resource "azurerm_windows_virtual_machine" "azvm" {

  count = var.number_of_VM
  name                = "a1azrapp0${count.index}"
  resource_group_name = local.resource_group_name
  location            = local.location
  size                = "Standard_D2S_v3"
  admin_username      = "a1_a1azrapp0${count.index}"
  admin_password      = "Arnab@123456123456"

  tags = local.Az_tags

  network_interface_ids = [
    azurerm_network_interface.az_interface[count.index].id
  ]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2019-Datacenter"
    version   = "latest"
  }

depends_on = [ azurerm_network_interface.az_interface,
azurerm_resource_group.AzResourceGr1 ]

}
